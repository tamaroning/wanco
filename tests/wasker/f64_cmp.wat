(module

  ;; Import our myprint function
  (import "myenv" "print" (func $print (param i64 i32)))

  ;; Define a single page memory of 64KB.
  (memory $0 1)

  ;; Store the Hello World (null terminated) string at byte offset 0
  (data (i32.const 0) "Test Passed\n")
  (data (i32.const 16) "#Test Failed\n")

  ;; Debug function
  (func $printd (param $len i32)
    i64.const 0
    (local.get $len)
    (call $print)
  )

  (func $printSuccess
    i64.const 0
    i32.const 12
    (call $print)
  )

  (func $printFail
    i64.const 16
    i32.const 13
    (call $print)
  )

  (func $assert_test_i32 (param $expected i32) (param $result i32)
    local.get $expected
    local.get $result
    i32.eq
    (if
      (then
        (call $printSuccess)
      )
      (else
        (call $printFail)
      )
    )
  )
  (func $assert_test_f32 (param $expected f32) (param $result f32)
    local.get $expected
    local.get $result
    f32.eq
    (if
      (then
        (call $printSuccess)
      )
      (else
        (call $printFail)
      )
    )
  )

  (func $assert_test_f64 (param $expected f64) (param $result f64)
    local.get $expected
    local.get $result
    f64.eq
    (if
      (then
        (call $printSuccess)
      )
      (else
        (call $printFail)
      )
    )
  )
  (func $eq (param $x f64) (param $y f64) (result i32) (f64.eq (local.get $x) (local.get $y)))
  (func $ne (param $x f64) (param $y f64) (result i32) (f64.ne (local.get $x) (local.get $y)))
  (func $lt (param $x f64) (param $y f64) (result i32) (f64.lt (local.get $x) (local.get $y)))
  (func $le (param $x f64) (param $y f64) (result i32) (f64.le (local.get $x) (local.get $y)))
  (func $gt (param $x f64) (param $y f64) (result i32) (f64.gt (local.get $x) (local.get $y)))
  ;;(func $ge (param $x f64) (param $y f64) (result i32) (f64.ge (local.get $x) (local.get $y)))

  (func (export "_start")
  (call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const nan)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const 0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $eq (f64.const inf) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const -nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $eq (f64.const nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const 0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $ne (f64.const inf) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -inf) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const inf) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const inf) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const inf) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const -nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const nan)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan) (f64.const nan:0x4000000000000)) (i32.const 1))
;;(call $assert_test_i32 (call $ne (f64.const nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -nan)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const nan)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -nan)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const nan)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const 0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $lt (f64.const inf) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const -nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $lt (f64.const nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const 0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const -inf) (f64.const inf)) (i32.const 1))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $le (f64.const inf) (f64.const inf)) (i32.const 1))
;;(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const -nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $le (f64.const nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x0.0000000000001p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1022) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p-1) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1p+0) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.921fb54442d18p+2) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const 0x1.fffffffffffffp+1023) (f64.const nan:0x4000000000000)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x0p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x0p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x0.0000000000001p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x1p-1022)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x1p-1022)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x1p-1)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x1p-1)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x1p+0)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x1p+0)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x1.921fb54442d18p+2)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const inf)) (i32.const 0))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -inf)) (i32.const 1))
(call $assert_test_i32 (call $gt (f64.const inf) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const inf) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const inf) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const inf) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x0p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x0.0000000000001p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x1p-1022)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x1p-1)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x1p+0)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x1.921fb54442d18p+2)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const 0x1.fffffffffffffp+1023)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const inf)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const -nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const -nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const nan)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan) (f64.const nan:0x4000000000000)) (i32.const 0))
;;(call $assert_test_i32 (call $gt (f64.const nan:0x4000000000000) (f64.const nan:0x4000000000000)) (i32.const 0))
  )
)