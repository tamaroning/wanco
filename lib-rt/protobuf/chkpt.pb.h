// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protobuf/chkpt.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_protobuf_2fchkpt_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protobuf_2fchkpt_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protobuf_2fchkpt_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protobuf_2fchkpt_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_protobuf_2fchkpt_2eproto;
namespace chkpt {
class Checkpoint;
struct CheckpointDefaultTypeInternal;
extern CheckpointDefaultTypeInternal _Checkpoint_default_instance_;
class Frame;
struct FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class Type;
struct TypeDefaultTypeInternal;
extern TypeDefaultTypeInternal _Type_default_instance_;
class Value;
struct ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace chkpt
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace chkpt {
enum Type_Enum : int {
  Type_Enum_UNSPECIFIED = 0,
  Type_Enum_I32 = 1,
  Type_Enum_I64 = 2,
  Type_Enum_F32 = 3,
  Type_Enum_F64 = 4,
  Type_Enum_Type_Enum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Type_Enum_Type_Enum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Type_Enum_IsValid(int value);
extern const uint32_t Type_Enum_internal_data_[];
constexpr Type_Enum Type_Enum_Enum_MIN = static_cast<Type_Enum>(0);
constexpr Type_Enum Type_Enum_Enum_MAX = static_cast<Type_Enum>(4);
constexpr int Type_Enum_Enum_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
Type_Enum_descriptor();
template <typename T>
const std::string& Type_Enum_Name(T value) {
  static_assert(std::is_same<T, Type_Enum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Enum_Name().");
  return Type_Enum_Name(static_cast<Type_Enum>(value));
}
template <>
inline const std::string& Type_Enum_Name(Type_Enum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Type_Enum_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool Type_Enum_Parse(absl::string_view name, Type_Enum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type_Enum>(
      Type_Enum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Value final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chkpt.Value) */ {
 public:
  inline Value() : Value(nullptr) {}
  ~Value() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Value(
      ::google::protobuf::internal::ConstantInitialized);

  inline Value(const Value& from) : Value(nullptr, from) {}
  inline Value(Value&& from) noexcept
      : Value(nullptr, std::move(from)) {}
  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }
  inline Value& operator=(Value&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Value& default_instance() {
    return *internal_default_instance();
  }
  enum TestOneofCase {
    kI32 = 2,
    kI64 = 3,
    kF32 = 4,
    kF64 = 5,
    TEST_ONEOF_NOT_SET = 0,
  };
  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
        &_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Value& a, Value& b) { a.Swap(&b); }
  inline void Swap(Value* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Value* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Value* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Value>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Value& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Value& from) { Value::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Value* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chkpt.Value"; }

 protected:
  explicit Value(::google::protobuf::Arena* arena);
  Value(::google::protobuf::Arena* arena, const Value& from);
  Value(::google::protobuf::Arena* arena, Value&& from) noexcept
      : Value(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kI32FieldNumber = 2,
    kI64FieldNumber = 3,
    kF32FieldNumber = 4,
    kF64FieldNumber = 5,
  };
  // .chkpt.Type.Enum type = 1;
  void clear_type() ;
  ::chkpt::Type_Enum type() const;
  void set_type(::chkpt::Type_Enum value);

  private:
  ::chkpt::Type_Enum _internal_type() const;
  void _internal_set_type(::chkpt::Type_Enum value);

  public:
  // int32 i32 = 2;
  bool has_i32() const;
  void clear_i32() ;
  ::int32_t i32() const;
  void set_i32(::int32_t value);

  private:
  ::int32_t _internal_i32() const;
  void _internal_set_i32(::int32_t value);

  public:
  // int64 i64 = 3;
  bool has_i64() const;
  void clear_i64() ;
  ::int64_t i64() const;
  void set_i64(::int64_t value);

  private:
  ::int64_t _internal_i64() const;
  void _internal_set_i64(::int64_t value);

  public:
  // float f32 = 4;
  bool has_f32() const;
  void clear_f32() ;
  float f32() const;
  void set_f32(float value);

  private:
  float _internal_f32() const;
  void _internal_set_f32(float value);

  public:
  // double f64 = 5;
  bool has_f64() const;
  void clear_f64() ;
  double f64() const;
  void set_f64(double value);

  private:
  double _internal_f64() const;
  void _internal_set_f64(double value);

  public:
  void clear_test_oneof();
  TestOneofCase test_oneof_case() const;
  // @@protoc_insertion_point(class_scope:chkpt.Value)
 private:
  class _Internal;
  void set_has_i32();
  void set_has_i64();
  void set_has_f32();
  void set_has_f64();
  inline bool has_test_oneof() const;
  inline void clear_has_test_oneof();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Value_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Value& from_msg);
    int type_;
    union TestOneofUnion {
      constexpr TestOneofUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t i32_;
      ::int64_t i64_;
      float f32_;
      double f64_;
    } test_oneof_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fchkpt_2eproto;
};
// -------------------------------------------------------------------

class Type final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:chkpt.Type) */ {
 public:
  inline Type() : Type(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Type(
      ::google::protobuf::internal::ConstantInitialized);

  inline Type(const Type& from) : Type(nullptr, from) {}
  inline Type(Type&& from) noexcept
      : Type(nullptr, std::move(from)) {}
  inline Type& operator=(const Type& from) {
    CopyFrom(from);
    return *this;
  }
  inline Type& operator=(Type&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Type& default_instance() {
    return *internal_default_instance();
  }
  static inline const Type* internal_default_instance() {
    return reinterpret_cast<const Type*>(
        &_Type_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Type& a, Type& b) { a.Swap(&b); }
  inline void Swap(Type* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Type* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Type* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Type>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Type& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Type& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chkpt.Type"; }

 protected:
  explicit Type(::google::protobuf::Arena* arena);
  Type(::google::protobuf::Arena* arena, const Type& from);
  Type(::google::protobuf::Arena* arena, Type&& from) noexcept
      : Type(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Enum = Type_Enum;
  static constexpr Enum UNSPECIFIED = Type_Enum_UNSPECIFIED;
  static constexpr Enum I32 = Type_Enum_I32;
  static constexpr Enum I64 = Type_Enum_I64;
  static constexpr Enum F32 = Type_Enum_F32;
  static constexpr Enum F64 = Type_Enum_F64;
  static inline bool Enum_IsValid(int value) {
    return Type_Enum_IsValid(value);
  }
  static constexpr Enum Enum_MIN = Type_Enum_Enum_MIN;
  static constexpr Enum Enum_MAX = Type_Enum_Enum_MAX;
  static constexpr int Enum_ARRAYSIZE = Type_Enum_Enum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Enum_descriptor() {
    return Type_Enum_descriptor();
  }
  template <typename T>
  static inline const std::string& Enum_Name(T value) {
    return Type_Enum_Name(value);
  }
  static inline bool Enum_Parse(absl::string_view name, Enum* value) {
    return Type_Enum_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:chkpt.Type)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Type_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Type& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_protobuf_2fchkpt_2eproto;
};
// -------------------------------------------------------------------

class Frame final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chkpt.Frame) */ {
 public:
  inline Frame() : Frame(nullptr) {}
  ~Frame() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Frame(
      ::google::protobuf::internal::ConstantInitialized);

  inline Frame(const Frame& from) : Frame(nullptr, from) {}
  inline Frame(Frame&& from) noexcept
      : Frame(nullptr, std::move(from)) {}
  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }
  inline Frame& operator=(Frame&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Frame& default_instance() {
    return *internal_default_instance();
  }
  static inline const Frame* internal_default_instance() {
    return reinterpret_cast<const Frame*>(
        &_Frame_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Frame& a, Frame& b) { a.Swap(&b); }
  inline void Swap(Frame* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Frame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Frame* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Frame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Frame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Frame& from) { Frame::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Frame* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chkpt.Frame"; }

 protected:
  explicit Frame(::google::protobuf::Arena* arena);
  Frame(::google::protobuf::Arena* arena, const Frame& from);
  Frame(::google::protobuf::Arena* arena, Frame&& from) noexcept
      : Frame(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocalsFieldNumber = 3,
    kStackFieldNumber = 4,
    kFnIdxFieldNumber = 1,
    kPcFieldNumber = 2,
  };
  // repeated .chkpt.Value locals = 3;
  int locals_size() const;
  private:
  int _internal_locals_size() const;

  public:
  void clear_locals() ;
  ::chkpt::Value* mutable_locals(int index);
  ::google::protobuf::RepeatedPtrField<::chkpt::Value>* mutable_locals();

  private:
  const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& _internal_locals() const;
  ::google::protobuf::RepeatedPtrField<::chkpt::Value>* _internal_mutable_locals();
  public:
  const ::chkpt::Value& locals(int index) const;
  ::chkpt::Value* add_locals();
  const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& locals() const;
  // repeated .chkpt.Value stack = 4;
  int stack_size() const;
  private:
  int _internal_stack_size() const;

  public:
  void clear_stack() ;
  ::chkpt::Value* mutable_stack(int index);
  ::google::protobuf::RepeatedPtrField<::chkpt::Value>* mutable_stack();

  private:
  const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& _internal_stack() const;
  ::google::protobuf::RepeatedPtrField<::chkpt::Value>* _internal_mutable_stack();
  public:
  const ::chkpt::Value& stack(int index) const;
  ::chkpt::Value* add_stack();
  const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& stack() const;
  // int32 fn_idx = 1;
  void clear_fn_idx() ;
  ::int32_t fn_idx() const;
  void set_fn_idx(::int32_t value);

  private:
  ::int32_t _internal_fn_idx() const;
  void _internal_set_fn_idx(::int32_t value);

  public:
  // int32 pc = 2;
  void clear_pc() ;
  ::int32_t pc() const;
  void set_pc(::int32_t value);

  private:
  ::int32_t _internal_pc() const;
  void _internal_set_pc(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chkpt.Frame)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Frame_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Frame& from_msg);
    ::google::protobuf::RepeatedPtrField< ::chkpt::Value > locals_;
    ::google::protobuf::RepeatedPtrField< ::chkpt::Value > stack_;
    ::int32_t fn_idx_;
    ::int32_t pc_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fchkpt_2eproto;
};
// -------------------------------------------------------------------

class Checkpoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chkpt.Checkpoint) */ {
 public:
  inline Checkpoint() : Checkpoint(nullptr) {}
  ~Checkpoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Checkpoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline Checkpoint(const Checkpoint& from) : Checkpoint(nullptr, from) {}
  inline Checkpoint(Checkpoint&& from) noexcept
      : Checkpoint(nullptr, std::move(from)) {}
  inline Checkpoint& operator=(const Checkpoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Checkpoint& operator=(Checkpoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Checkpoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const Checkpoint* internal_default_instance() {
    return reinterpret_cast<const Checkpoint*>(
        &_Checkpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Checkpoint& a, Checkpoint& b) { a.Swap(&b); }
  inline void Swap(Checkpoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Checkpoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Checkpoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Checkpoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Checkpoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Checkpoint& from) { Checkpoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Checkpoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chkpt.Checkpoint"; }

 protected:
  explicit Checkpoint(::google::protobuf::Arena* arena);
  Checkpoint(::google::protobuf::Arena* arena, const Checkpoint& from);
  Checkpoint(::google::protobuf::Arena* arena, Checkpoint&& from) noexcept
      : Checkpoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFramesFieldNumber = 1,
    kGlobalsFieldNumber = 2,
    kTableFieldNumber = 3,
    kMemoryLz4FieldNumber = 5,
    kMemorySizeFieldNumber = 4,
  };
  // repeated .chkpt.Frame frames = 1;
  int frames_size() const;
  private:
  int _internal_frames_size() const;

  public:
  void clear_frames() ;
  ::chkpt::Frame* mutable_frames(int index);
  ::google::protobuf::RepeatedPtrField<::chkpt::Frame>* mutable_frames();

  private:
  const ::google::protobuf::RepeatedPtrField<::chkpt::Frame>& _internal_frames() const;
  ::google::protobuf::RepeatedPtrField<::chkpt::Frame>* _internal_mutable_frames();
  public:
  const ::chkpt::Frame& frames(int index) const;
  ::chkpt::Frame* add_frames();
  const ::google::protobuf::RepeatedPtrField<::chkpt::Frame>& frames() const;
  // repeated .chkpt.Value globals = 2;
  int globals_size() const;
  private:
  int _internal_globals_size() const;

  public:
  void clear_globals() ;
  ::chkpt::Value* mutable_globals(int index);
  ::google::protobuf::RepeatedPtrField<::chkpt::Value>* mutable_globals();

  private:
  const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& _internal_globals() const;
  ::google::protobuf::RepeatedPtrField<::chkpt::Value>* _internal_mutable_globals();
  public:
  const ::chkpt::Value& globals(int index) const;
  ::chkpt::Value* add_globals();
  const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& globals() const;
  // repeated int32 table = 3;
  int table_size() const;
  private:
  int _internal_table_size() const;

  public:
  void clear_table() ;
  ::int32_t table(int index) const;
  void set_table(int index, ::int32_t value);
  void add_table(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& table() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_table();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_table() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_table();

  public:
  // bytes memory_lz4 = 5;
  void clear_memory_lz4() ;
  const std::string& memory_lz4() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memory_lz4(Arg_&& arg, Args_... args);
  std::string* mutable_memory_lz4();
  PROTOBUF_NODISCARD std::string* release_memory_lz4();
  void set_allocated_memory_lz4(std::string* value);

  private:
  const std::string& _internal_memory_lz4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memory_lz4(
      const std::string& value);
  std::string* _internal_mutable_memory_lz4();

  public:
  // int32 memory_size = 4;
  void clear_memory_size() ;
  ::int32_t memory_size() const;
  void set_memory_size(::int32_t value);

  private:
  ::int32_t _internal_memory_size() const;
  void _internal_set_memory_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chkpt.Checkpoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Checkpoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Checkpoint& from_msg);
    ::google::protobuf::RepeatedPtrField< ::chkpt::Frame > frames_;
    ::google::protobuf::RepeatedPtrField< ::chkpt::Value > globals_;
    ::google::protobuf::RepeatedField<::int32_t> table_;
    mutable ::google::protobuf::internal::CachedSize _table_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr memory_lz4_;
    ::int32_t memory_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protobuf_2fchkpt_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Type

// -------------------------------------------------------------------

// Value

// .chkpt.Type.Enum type = 1;
inline void Value::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::chkpt::Type_Enum Value::type() const {
  // @@protoc_insertion_point(field_get:chkpt.Value.type)
  return _internal_type();
}
inline void Value::set_type(::chkpt::Type_Enum value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:chkpt.Value.type)
}
inline ::chkpt::Type_Enum Value::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::chkpt::Type_Enum>(_impl_.type_);
}
inline void Value::_internal_set_type(::chkpt::Type_Enum value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// int32 i32 = 2;
inline bool Value::has_i32() const {
  return test_oneof_case() == kI32;
}
inline void Value::set_has_i32() {
  _impl_._oneof_case_[0] = kI32;
}
inline void Value::clear_i32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (test_oneof_case() == kI32) {
    _impl_.test_oneof_.i32_ = 0;
    clear_has_test_oneof();
  }
}
inline ::int32_t Value::i32() const {
  // @@protoc_insertion_point(field_get:chkpt.Value.i32)
  return _internal_i32();
}
inline void Value::set_i32(::int32_t value) {
  if (test_oneof_case() != kI32) {
    clear_test_oneof();
    set_has_i32();
  }
  _impl_.test_oneof_.i32_ = value;
  // @@protoc_insertion_point(field_set:chkpt.Value.i32)
}
inline ::int32_t Value::_internal_i32() const {
  if (test_oneof_case() == kI32) {
    return _impl_.test_oneof_.i32_;
  }
  return 0;
}

// int64 i64 = 3;
inline bool Value::has_i64() const {
  return test_oneof_case() == kI64;
}
inline void Value::set_has_i64() {
  _impl_._oneof_case_[0] = kI64;
}
inline void Value::clear_i64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (test_oneof_case() == kI64) {
    _impl_.test_oneof_.i64_ = ::int64_t{0};
    clear_has_test_oneof();
  }
}
inline ::int64_t Value::i64() const {
  // @@protoc_insertion_point(field_get:chkpt.Value.i64)
  return _internal_i64();
}
inline void Value::set_i64(::int64_t value) {
  if (test_oneof_case() != kI64) {
    clear_test_oneof();
    set_has_i64();
  }
  _impl_.test_oneof_.i64_ = value;
  // @@protoc_insertion_point(field_set:chkpt.Value.i64)
}
inline ::int64_t Value::_internal_i64() const {
  if (test_oneof_case() == kI64) {
    return _impl_.test_oneof_.i64_;
  }
  return ::int64_t{0};
}

// float f32 = 4;
inline bool Value::has_f32() const {
  return test_oneof_case() == kF32;
}
inline void Value::set_has_f32() {
  _impl_._oneof_case_[0] = kF32;
}
inline void Value::clear_f32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (test_oneof_case() == kF32) {
    _impl_.test_oneof_.f32_ = 0;
    clear_has_test_oneof();
  }
}
inline float Value::f32() const {
  // @@protoc_insertion_point(field_get:chkpt.Value.f32)
  return _internal_f32();
}
inline void Value::set_f32(float value) {
  if (test_oneof_case() != kF32) {
    clear_test_oneof();
    set_has_f32();
  }
  _impl_.test_oneof_.f32_ = value;
  // @@protoc_insertion_point(field_set:chkpt.Value.f32)
}
inline float Value::_internal_f32() const {
  if (test_oneof_case() == kF32) {
    return _impl_.test_oneof_.f32_;
  }
  return 0;
}

// double f64 = 5;
inline bool Value::has_f64() const {
  return test_oneof_case() == kF64;
}
inline void Value::set_has_f64() {
  _impl_._oneof_case_[0] = kF64;
}
inline void Value::clear_f64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (test_oneof_case() == kF64) {
    _impl_.test_oneof_.f64_ = 0;
    clear_has_test_oneof();
  }
}
inline double Value::f64() const {
  // @@protoc_insertion_point(field_get:chkpt.Value.f64)
  return _internal_f64();
}
inline void Value::set_f64(double value) {
  if (test_oneof_case() != kF64) {
    clear_test_oneof();
    set_has_f64();
  }
  _impl_.test_oneof_.f64_ = value;
  // @@protoc_insertion_point(field_set:chkpt.Value.f64)
}
inline double Value::_internal_f64() const {
  if (test_oneof_case() == kF64) {
    return _impl_.test_oneof_.f64_;
  }
  return 0;
}

inline bool Value::has_test_oneof() const {
  return test_oneof_case() != TEST_ONEOF_NOT_SET;
}
inline void Value::clear_has_test_oneof() {
  _impl_._oneof_case_[0] = TEST_ONEOF_NOT_SET;
}
inline Value::TestOneofCase Value::test_oneof_case() const {
  return Value::TestOneofCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Frame

// int32 fn_idx = 1;
inline void Frame::clear_fn_idx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fn_idx_ = 0;
}
inline ::int32_t Frame::fn_idx() const {
  // @@protoc_insertion_point(field_get:chkpt.Frame.fn_idx)
  return _internal_fn_idx();
}
inline void Frame::set_fn_idx(::int32_t value) {
  _internal_set_fn_idx(value);
  // @@protoc_insertion_point(field_set:chkpt.Frame.fn_idx)
}
inline ::int32_t Frame::_internal_fn_idx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fn_idx_;
}
inline void Frame::_internal_set_fn_idx(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fn_idx_ = value;
}

// int32 pc = 2;
inline void Frame::clear_pc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pc_ = 0;
}
inline ::int32_t Frame::pc() const {
  // @@protoc_insertion_point(field_get:chkpt.Frame.pc)
  return _internal_pc();
}
inline void Frame::set_pc(::int32_t value) {
  _internal_set_pc(value);
  // @@protoc_insertion_point(field_set:chkpt.Frame.pc)
}
inline ::int32_t Frame::_internal_pc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pc_;
}
inline void Frame::_internal_set_pc(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pc_ = value;
}

// repeated .chkpt.Value locals = 3;
inline int Frame::_internal_locals_size() const {
  return _internal_locals().size();
}
inline int Frame::locals_size() const {
  return _internal_locals_size();
}
inline void Frame::clear_locals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locals_.Clear();
}
inline ::chkpt::Value* Frame::mutable_locals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:chkpt.Frame.locals)
  return _internal_mutable_locals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Value>* Frame::mutable_locals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chkpt.Frame.locals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_locals();
}
inline const ::chkpt::Value& Frame::locals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chkpt.Frame.locals)
  return _internal_locals().Get(index);
}
inline ::chkpt::Value* Frame::add_locals() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::chkpt::Value* _add = _internal_mutable_locals()->Add();
  // @@protoc_insertion_point(field_add:chkpt.Frame.locals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& Frame::locals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chkpt.Frame.locals)
  return _internal_locals();
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Value>&
Frame::_internal_locals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locals_;
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Value>*
Frame::_internal_mutable_locals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.locals_;
}

// repeated .chkpt.Value stack = 4;
inline int Frame::_internal_stack_size() const {
  return _internal_stack().size();
}
inline int Frame::stack_size() const {
  return _internal_stack_size();
}
inline void Frame::clear_stack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stack_.Clear();
}
inline ::chkpt::Value* Frame::mutable_stack(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:chkpt.Frame.stack)
  return _internal_mutable_stack()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Value>* Frame::mutable_stack()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chkpt.Frame.stack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_stack();
}
inline const ::chkpt::Value& Frame::stack(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chkpt.Frame.stack)
  return _internal_stack().Get(index);
}
inline ::chkpt::Value* Frame::add_stack() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::chkpt::Value* _add = _internal_mutable_stack()->Add();
  // @@protoc_insertion_point(field_add:chkpt.Frame.stack)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& Frame::stack() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chkpt.Frame.stack)
  return _internal_stack();
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Value>&
Frame::_internal_stack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stack_;
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Value>*
Frame::_internal_mutable_stack() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.stack_;
}

// -------------------------------------------------------------------

// Checkpoint

// repeated .chkpt.Frame frames = 1;
inline int Checkpoint::_internal_frames_size() const {
  return _internal_frames().size();
}
inline int Checkpoint::frames_size() const {
  return _internal_frames_size();
}
inline void Checkpoint::clear_frames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frames_.Clear();
}
inline ::chkpt::Frame* Checkpoint::mutable_frames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:chkpt.Checkpoint.frames)
  return _internal_mutable_frames()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Frame>* Checkpoint::mutable_frames()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chkpt.Checkpoint.frames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_frames();
}
inline const ::chkpt::Frame& Checkpoint::frames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chkpt.Checkpoint.frames)
  return _internal_frames().Get(index);
}
inline ::chkpt::Frame* Checkpoint::add_frames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::chkpt::Frame* _add = _internal_mutable_frames()->Add();
  // @@protoc_insertion_point(field_add:chkpt.Checkpoint.frames)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Frame>& Checkpoint::frames() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chkpt.Checkpoint.frames)
  return _internal_frames();
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Frame>&
Checkpoint::_internal_frames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frames_;
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Frame>*
Checkpoint::_internal_mutable_frames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.frames_;
}

// repeated .chkpt.Value globals = 2;
inline int Checkpoint::_internal_globals_size() const {
  return _internal_globals().size();
}
inline int Checkpoint::globals_size() const {
  return _internal_globals_size();
}
inline void Checkpoint::clear_globals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.globals_.Clear();
}
inline ::chkpt::Value* Checkpoint::mutable_globals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:chkpt.Checkpoint.globals)
  return _internal_mutable_globals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Value>* Checkpoint::mutable_globals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chkpt.Checkpoint.globals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_globals();
}
inline const ::chkpt::Value& Checkpoint::globals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chkpt.Checkpoint.globals)
  return _internal_globals().Get(index);
}
inline ::chkpt::Value* Checkpoint::add_globals() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::chkpt::Value* _add = _internal_mutable_globals()->Add();
  // @@protoc_insertion_point(field_add:chkpt.Checkpoint.globals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Value>& Checkpoint::globals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chkpt.Checkpoint.globals)
  return _internal_globals();
}
inline const ::google::protobuf::RepeatedPtrField<::chkpt::Value>&
Checkpoint::_internal_globals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.globals_;
}
inline ::google::protobuf::RepeatedPtrField<::chkpt::Value>*
Checkpoint::_internal_mutable_globals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.globals_;
}

// repeated int32 table = 3;
inline int Checkpoint::_internal_table_size() const {
  return _internal_table().size();
}
inline int Checkpoint::table_size() const {
  return _internal_table_size();
}
inline void Checkpoint::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Clear();
}
inline ::int32_t Checkpoint::table(int index) const {
  // @@protoc_insertion_point(field_get:chkpt.Checkpoint.table)
  return _internal_table().Get(index);
}
inline void Checkpoint::set_table(int index, ::int32_t value) {
  _internal_mutable_table()->Set(index, value);
  // @@protoc_insertion_point(field_set:chkpt.Checkpoint.table)
}
inline void Checkpoint::add_table(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_table()->Add(value);
  // @@protoc_insertion_point(field_add:chkpt.Checkpoint.table)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Checkpoint::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:chkpt.Checkpoint.table)
  return _internal_table();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Checkpoint::mutable_table()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:chkpt.Checkpoint.table)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_table();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Checkpoint::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Checkpoint::_internal_mutable_table() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.table_;
}

// int32 memory_size = 4;
inline void Checkpoint::clear_memory_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_size_ = 0;
}
inline ::int32_t Checkpoint::memory_size() const {
  // @@protoc_insertion_point(field_get:chkpt.Checkpoint.memory_size)
  return _internal_memory_size();
}
inline void Checkpoint::set_memory_size(::int32_t value) {
  _internal_set_memory_size(value);
  // @@protoc_insertion_point(field_set:chkpt.Checkpoint.memory_size)
}
inline ::int32_t Checkpoint::_internal_memory_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_size_;
}
inline void Checkpoint::_internal_set_memory_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_size_ = value;
}

// bytes memory_lz4 = 5;
inline void Checkpoint::clear_memory_lz4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_lz4_.ClearToEmpty();
}
inline const std::string& Checkpoint::memory_lz4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chkpt.Checkpoint.memory_lz4)
  return _internal_memory_lz4();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Checkpoint::set_memory_lz4(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_lz4_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chkpt.Checkpoint.memory_lz4)
}
inline std::string* Checkpoint::mutable_memory_lz4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memory_lz4();
  // @@protoc_insertion_point(field_mutable:chkpt.Checkpoint.memory_lz4)
  return _s;
}
inline const std::string& Checkpoint::_internal_memory_lz4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_lz4_.Get();
}
inline void Checkpoint::_internal_set_memory_lz4(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_lz4_.Set(value, GetArena());
}
inline std::string* Checkpoint::_internal_mutable_memory_lz4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memory_lz4_.Mutable( GetArena());
}
inline std::string* Checkpoint::release_memory_lz4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chkpt.Checkpoint.memory_lz4)
  return _impl_.memory_lz4_.Release();
}
inline void Checkpoint::set_allocated_memory_lz4(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_lz4_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memory_lz4_.IsDefault()) {
          _impl_.memory_lz4_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chkpt.Checkpoint.memory_lz4)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace chkpt


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::chkpt::Type_Enum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::chkpt::Type_Enum>() {
  return ::chkpt::Type_Enum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protobuf_2fchkpt_2eproto_2epb_2eh
